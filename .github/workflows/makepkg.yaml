name: Make Archlinux Package Repository

on:
  push:
    branches:
    - '**'
    tags-ignore:
    - '**'
  schedule:
    - cron: "37 5 * * 0"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow one concurrent deployment
concurrency:
  group: "branch-${{ github.ref_name }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      updated: ${{
        steps.build1.outputs.updated == 'true' ||
        steps.build2.outputs.updated == 'true' }}
      branch-prefix: ${{ steps.init.outputs.branch-prefix }}
      date: ${{ steps.init.outputs.date}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: "src"
    - name: Initialise and analyse
      id: init
      run: |
        set -o pipefail
        if [ "${{ github.ref_name }}" == "${{ github.event.repository.default_branch }}" ] ; then
          branch_prefix=
        else
          branch_prefix="${{ github.ref_name }}-"
        fi
        reponame="${GITHUB_REPOSITORY##*/}"
        branch_prev=$(git -C src tag -l "${branch_prefix}2*" | tail -1)
        tag_date="$(date +'%Y%m%d-%H%M%S')"
        cp -a src/index.html .
        rm -rf src
        echo "Date used for tagging: $tag_date"
        echo "Repo name: $reponame"
        echo "Branch prefix: $branch_prefix"
        echo "Previous release: $branch_prev"
        echo "date=$tag_date" >>$GITHUB_OUTPUT
        echo "reponame=$reponame" >>$GITHUB_OUTPUT
        echo "branch-prefix=$branch_prefix" >>$GITHUB_OUTPUT
        echo "branch-prev=$branch_prev" >>$GITHUB_OUTPUT
    - name: download previous release
      id: download
      if: ${{ steps.init.outputs.branch-prev != '' }}
      uses: robinraju/release-downloader@v1.7
      with:
        tag: ${{ steps.init.outputs.branch-prev }}
        filename: "*"
    - name: Build vdr Package (prereq for other pkgs)
      id: build1
      uses: nafets227/build-aur-packages@dev
      with:
        keep: true
        reponame: '${{ github.repository_owner }}-${{ steps.init.outputs.reponame }}'
        packages: >
          vdr
    - name: Build Packages
      id: build2
      uses: nafets227/build-aur-packages@v0.2
      with:
        keep: true
        reponame: '${{ github.repository_owner }}-${{ steps.init.outputs.reponame }}'
        packages: >
          vdr-epgsearch
          blktrace
          dhtest
          dropwatch
          shim-signed
          splunk-forwarder
          td-agent
          vdr-remote
          vdr-satip
          perl-template-plugin-javascript
          vdradmin-am
          xlogin
          virtio-win
        #dummy2: >
        #  # these packages have different source than official AUR
        #  dhtest https://github.com/nafets227/dhtest.aur.git
    - name: Upload Result to gh Artifact
      if: ${{
        steps.build1.outputs.updated == 'true' ||
        steps.build2.outputs.updated == 'true' }}
      id: upload
      uses: actions/upload-pages-artifact@v1.0.7
      with:
        path: ${{ github.workspace }}


  release:
    needs: build
    if: ${{ needs.build.outputs.updated == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v3.0.1
      with:
        name: github-pages
        path: ${{ github.workspace }}
    - name: unpack
      run: |
        tar xvf artifact.tar
        rm artifact.tar
    - name: Upload Files to Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "${{ needs.build.outputs.branch-prefix }}${{ needs.build.outputs.date }}"
        body: ${{ github.repository }} build ${{ github.run_number }} for ${{ github.ref_name }} from ${{ needs.build.outputs.date }}
        files: |
          ${{ github.workspace }}/*
        prerelease: ${{ needs.build.outputs.branch-prefix != '' }}
        target_commitish: ${{ github.ref_name }}
